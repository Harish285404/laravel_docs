php artisan make:request RegisterRequest<?phpnamespace App\Http\Requests;use Illuminate\Foundation\Http\FormRequest;class RegisterRequest extends FormRequest{    /**     * Determine if the user is authorized to make this request.     *     * @return bool     */    public function authorize()    {        return true; // You can add custom logic here if necessary    }    /**     * Get the validation rules that apply to the request.     *     * @return array     */    public function rules()    {        return [            'name' => 'required|string|max:255',            'email' => 'required|string|email|max:255|unique:users',            'password' => 'required|string|confirmed|min:8',        ];    }    /**     * Get the custom messages for the validator errors.     *     * @return array     */    public function messages()    {        return [            'name.required' => 'The name is required.',            'email.required' => 'The email address is required.',            'password.required' => 'The password is required.',            'password.confirmed' => 'The password confirmation does not match.',            'password.min' => 'The password must be at least 8 characters.',        ];    }}<?phpnamespace App\Http\Controllers;use App\Http\Requests\RegisterRequest;use App\Http\Requests\LoginRequest;use App\Models\User;use Illuminate\Http\Request;use Illuminate\Support\Facades\Hash;class AuthController extends Controller{    public function register(RegisterRequest $request)    {        // Since validation is already handled by RegisterRequest, we can directly access validated data        $user = User::create([            'name' => $request->name,            'email' => $request->email,            'password' => Hash::make($request->password),        ]);        return response()->json(['user' => $user, 'token' => $user->createToken('LaravelVueAuth')->plainTextToken]);    }    public function login(LoginRequest $request)    {        // Same for login validation        $user = User::where('email', $request->email)->first();        if (!$user || !Hash::check($request->password, $user->password)) {            return response()->json(['message' => 'Unauthorized'], 401);        }        return response()->json(['user' => $user, 'token' => $user->createToken('LaravelVueAuth')->plainTextToken]);    }    public function logout(Request $request)    {        $request->user()->tokens->each(function ($token) {            $token->delete();        });        return response()->json(['message' => 'Logged out successfully']);    }}